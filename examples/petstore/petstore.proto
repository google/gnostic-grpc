syntax = "proto3";

package petstore;

import "google/api/annotations.proto";

import "google/protobuf/descriptor.proto";

import "google/protobuf/empty.proto";

option go_package = ".;petstore";

message Order {
  int64 id = 1;

  int64 pet_id = 2;

  int32 quantity = 3;

  string ship_date = 4;

  Status status = 5;

  bool complete = 6;

  enum Status {
    PLACED = 0;

    APPROVED = 1;

    DELIVERED = 2;
  }
}

message Category {
  int64 id = 1;

  string name = 2;
}

message User {
  int64 id = 1;

  string username = 2;

  string first_name = 3;

  string last_name = 4;

  string email = 5;

  string password = 6;

  string phone = 7;

  int32 user_status = 8;
}

message Tag {
  int64 id = 1;

  string name = 2;
}

message Pet {
  int64 id = 1;

  Category category = 2;

  string name = 3;

  repeated string photo_urls = 4;

  repeated Tag tags = 5;

  Status status = 6;

  enum Status {
    AVAILABLE = 0;

    PENDING = 1;

    SOLD = 2;
  }
}

message ApiResponse {
  int32 code = 1;

  string type = 2;

  string message = 3;
}

//UpdatePetParameters holds parameters to UpdatePet
message UpdatePetRequest {
  Pet pet = 1;
}

//AddPetParameters holds parameters to AddPet
message AddPetRequest {
  Pet pet = 1;
}

//FindPetsByStatusParameters holds parameters to FindPetsByStatus
message FindPetsByStatusRequest {
  repeated Status status = 1;

  enum Status {
    AVAILABLE = 0;

    PENDING = 1;

    SOLD = 2;
  }
}

//FindPetsByTagsParameters holds parameters to FindPetsByTags
message FindPetsByTagsRequest {
  repeated string tags = 1;
}

//GetPetByIdParameters holds parameters to GetPetById
message GetPetByIdRequest {
  int64 pet_id = 1;
}

message UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded {
  string name = 1;

  string status = 2;
}

//UpdatePetWithFormParameters holds parameters to UpdatePetWithForm
message UpdatePetWithFormRequest {
  int64 pet_id = 1;

  UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded application_x_www_form_urlencoded = 2;
}

//DeletePetParameters holds parameters to DeletePet
message DeletePetRequest {
  string api_key = 1;

  int64 pet_id = 2;
}

//UploadFileParameters holds parameters to UploadFile
message UploadFileRequest {
  int64 pet_id = 1;

  string application_octet_stream = 2;
}

message GetInventoryOK {
  map<string, int32> additional_properties = 1;
}

//PlaceOrderParameters holds parameters to PlaceOrder
message PlaceOrderRequest {
  Order order = 1;
}

//GetOrderByIdParameters holds parameters to GetOrderById
message GetOrderByIdRequest {
  int64 order_id = 1;
}

//DeleteOrderParameters holds parameters to DeleteOrder
message DeleteOrderRequest {
  int64 order_id = 1;
}

//CreateUserParameters holds parameters to CreateUser
message CreateUserRequest {
  User user = 1;
}

//CreateUsersWithArrayInputParameters holds parameters to CreateUsersWithArrayInput
message CreateUsersWithArrayInputRequest {
  User user = 1;
}

//CreateUsersWithListInputParameters holds parameters to CreateUsersWithListInput
message CreateUsersWithListInputRequest {
  User user = 1;
}

//LoginUserParameters holds parameters to LoginUser
message LoginUserRequest {
  string username = 1;

  string password = 2;
}

//GetUserByNameParameters holds parameters to GetUserByName
message GetUserByNameRequest {
  string username = 1;
}

//UpdateUserParameters holds parameters to UpdateUser
message UpdateUserRequest {
  string username = 1;

  User user = 2;
}

//DeleteUserParameters holds parameters to DeleteUser
message DeleteUserRequest {
  string username = 1;
}

service Petstore {
  rpc UpdatePet ( UpdatePetRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/pet" body:"pet"  };
  }

  rpc AddPet ( AddPetRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet" body:"pet"  };
  }

  rpc FindPetsByStatus ( FindPetsByStatusRequest ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/findByStatus"  };
  }

  rpc FindPetsByTags ( FindPetsByTagsRequest ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/findByTags"  };
  }

  rpc GetPetById ( GetPetByIdRequest ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/{petId}"  };
  }

  rpc UpdatePetWithForm ( UpdatePetWithFormRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet/{petId}" body:"application_x_www_form_urlencoded"  };
  }

  rpc DeletePet ( DeletePetRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/pet/{petId}"  };
  }

  rpc UploadFile ( UploadFileRequest ) returns ( ApiResponse ) {
    option (google.api.http) = { post:"/pet/{petId}/uploadImage" body:"application_octet_stream"  };
  }

  rpc GetInventory ( google.protobuf.Empty ) returns ( GetInventoryOK ) {
    option (google.api.http) = { get:"/store/inventory"  };
  }

  rpc PlaceOrder ( PlaceOrderRequest ) returns ( Order ) {
    option (google.api.http) = { post:"/store/order" body:"order"  };
  }

  rpc GetOrderById ( GetOrderByIdRequest ) returns ( Order ) {
    option (google.api.http) = { get:"/store/order/{orderId}"  };
  }

  rpc DeleteOrder ( DeleteOrderRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/store/order/{orderId}"  };
  }

  rpc CreateUser ( CreateUserRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user" body:"user"  };
  }

  rpc CreateUsersWithArrayInput ( CreateUsersWithArrayInputRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithArray" body:"user"  };
  }

  rpc CreateUsersWithListInput ( CreateUsersWithListInputRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithList" body:"user"  };
  }

  rpc LoginUser ( LoginUserRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/user/login"  };
  }

  rpc LogoutUser ( google.protobuf.Empty ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/user/logout"  };
  }

  rpc GetUserByName ( GetUserByNameRequest ) returns ( User ) {
    option (google.api.http) = { get:"/user/{username}"  };
  }

  rpc UpdateUser ( UpdateUserRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/user/{username}" body:"user"  };
  }

  rpc DeleteUser ( DeleteUserRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/user/{username}"  };
  }
}

