syntax = "proto3";

package petstore;

import "google/api/annotations.proto";

import "google/protobuf/empty.proto";

import "google/protobuf/descriptor.proto";

message Order {
  int64 id = 1;

  int64 pet_id = 2;

  int32 quantity = 3;

  string ship_date = 4;

  string status = 5;

  bool complete = 6;
}

message Category {
  int64 id = 1;

  string name = 2;
}

message User {
  int64 id = 1;

  string username = 2;

  string first_name = 3;

  string last_name = 4;

  string email = 5;

  string password = 6;

  string phone = 7;

  int32 user_status = 8;
}

message Tag {
  int64 id = 1;

  string name = 2;
}

message Pet {
  int64 id = 1;

  Category category = 2;

  string name = 3;

  repeated string photo_urls = 4;

  repeated Tag tags = 5;

  string status = 6;
}

message ApiResponse {
  int32 code = 1;

  string type = 2;

  string message = 3;
}

message UpdatePetParameters {
  Pet pet = 1;
}

message AddPetParameters {
  Pet pet = 1;
}

message FindPetsByStatusParameters {
  repeated string status = 1;
}

message FindPetsByTagsParameters {
  repeated string tags = 1;
}

message GetPetByIdParameters {
  int64 pet_id = 1;
}

message UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded {
  string name = 1;

  string status = 2;
}

message UpdatePetWithFormParameters {
  int64 pet_id = 1;

  UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded application_x_www_form_urlencoded = 2;
}

message DeletePetParameters {
  string api_key = 1;

  int64 pet_id = 2;
}

message UploadFileParameters {
  int64 pet_id = 1;

  string application_octet_stream = 2;
}

message GetInventoryOK {
  map<string, int32> additional_properties = 1;
}

message PlaceOrderParameters {
  Order order = 1;
}

message GetOrderByIdParameters {
  int64 order_id = 1;
}

message DeleteOrderParameters {
  int64 order_id = 1;
}

message CreateUserParameters {
  User user = 1;
}

message CreateUsersWithArrayInputParameters {
  User user = 1;
}

message CreateUsersWithListInputParameters {
  User user = 1;
}

message LoginUserParameters {
  string username = 1;

  string password = 2;
}

message GetUserByNameParameters {
  string username = 1;
}

message UpdateUserParameters {
  string username = 1;

  User user = 2;
}

message DeleteUserParameters {
  string username = 1;
}

service Petstore {
  rpc UpdatePet ( UpdatePetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/pet" body:"pet"  };
  }

  rpc AddPet ( AddPetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet" body:"pet"  };
  }

  rpc FindPetsByStatus ( FindPetsByStatusParameters ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/findByStatus"  };
  }

  rpc FindPetsByTags ( FindPetsByTagsParameters ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/findByTags"  };
  }

  rpc GetPetById ( GetPetByIdParameters ) returns ( Pet ) {
    option (google.api.http) = { get:"/pet/{petId}"  };
  }

  rpc UpdatePetWithForm ( UpdatePetWithFormParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet/{petId}" body:"application_x_www_form_urlencoded"  };
  }

  rpc DeletePet ( DeletePetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/pet/{petId}"  };
  }

  rpc UploadFile ( UploadFileParameters ) returns ( ApiResponse ) {
    option (google.api.http) = { post:"/pet/{petId}/uploadImage" body:"application_octet_stream"  };
  }

  rpc GetInventory ( google.protobuf.Empty ) returns ( GetInventoryOK ) {
    option (google.api.http) = { get:"/store/inventory"  };
  }

  rpc PlaceOrder ( PlaceOrderParameters ) returns ( Order ) {
    option (google.api.http) = { post:"/store/order" body:"order"  };
  }

  rpc GetOrderById ( GetOrderByIdParameters ) returns ( Order ) {
    option (google.api.http) = { get:"/store/order/{orderId}"  };
  }

  rpc DeleteOrder ( DeleteOrderParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/store/order/{orderId}"  };
  }

  rpc CreateUser ( CreateUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user" body:"user"  };
  }

  rpc CreateUsersWithArrayInput ( CreateUsersWithArrayInputParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithArray" body:"user"  };
  }

  rpc CreateUsersWithListInput ( CreateUsersWithListInputParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithList" body:"user"  };
  }

  rpc LoginUser ( LoginUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/user/login"  };
  }

  rpc LogoutUser ( google.protobuf.Empty ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/user/logout"  };
  }

  rpc GetUserByName ( GetUserByNameParameters ) returns ( User ) {
    option (google.api.http) = { get:"/user/{username}"  };
  }

  rpc UpdateUser ( UpdateUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/user/{username}" body:"user"  };
  }

  rpc DeleteUser ( DeleteUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/user/{username}"  };
  }
}

