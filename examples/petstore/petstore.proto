syntax = "proto3";

package petstore;

import "google/api/annotations.proto";

import "google/protobuf/empty.proto";

import "google/protobuf/descriptor.proto";

message Order {
  int64 id = 1;

  int64 petid = 2;

  int32 quantity = 3;

  string shipdate = 4;

  string status = 5;

  bool complete = 6;
}

message Category {
  int64 id = 1;

  string name = 2;
}

message User {
  int64 id = 1;

  string username = 2;

  string firstname = 3;

  string lastname = 4;

  string email = 5;

  string password = 6;

  string phone = 7;

  int32 userstatus = 8;
}

message Tag {
  int64 id = 1;

  string name = 2;
}

message Pet {
  int64 id = 1;

  Category category = 2;

  string name = 3;

  repeated string photourls = 4;

  repeated Tag tags = 5;

  string status = 6;
}

message ApiResponse {
  int32 code = 1;

  string type = 2;

  string message = 3;
}

message Pet {
  Pet application_json = 1;

  Pet application_xml = 2;
}

message UserArray {
  repeated User application_json = 1;
}

message UpdatePetParameters {
  Pet request_body = 1;
}

message AddPetParameters {
  Pet request_body = 1;
}

message FindPetsByStatusParameters {
  repeated string status = 1;
}

message FindPetsByStatusOK {
  repeated Pet application_json = 1;

  repeated Pet application_xml = 2;
}

message FindPetsByStatusResponses {
  FindPetsByStatusOK ok = 1;
}

message FindPetsByTagsParameters {
  repeated string tags = 1;
}

message FindPetsByTagsOK {
  repeated Pet application_json = 1;

  repeated Pet application_xml = 2;
}

message FindPetsByTagsResponses {
  FindPetsByTagsOK ok = 1;
}

message GetPetByIdParameters {
  int64 petid = 1;
}

message GetPetByIdOK {
  Pet application_json = 1;

  Pet application_xml = 2;
}

message GetPetByIdResponses {
  GetPetByIdOK ok = 1;
}

message UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded {
  string name = 1;

  string status = 2;
}

message UpdatePetWithFormRequestBody {
  UpdatePetWithFormRequestBodyapplicationXWwwFormUrlencoded application_x_www_form_urlencoded = 1;
}

message UpdatePetWithFormParameters {
  int64 petid = 1;

  UpdatePetWithFormRequestBody request_body = 2;
}

message DeletePetParameters {
  string api_key = 1;

  int64 petid = 2;
}

message UploadFileRequestBody {
  string application_octet_stream = 1;
}

message UploadFileParameters {
  int64 petid = 1;

  UploadFileRequestBody request_body = 2;
}

message UploadFileOK {
  ApiResponse application_json = 1;
}

message UploadFileResponses {
  UploadFileOK ok = 1;
}

message GetInventoryOKapplicationJson {
  map<string, int32> additional_properties = 1;
}

message GetInventoryOK {
  GetInventoryOKapplicationJson application_json = 1;
}

message GetInventoryResponses {
  GetInventoryOK ok = 1;
}

message PlaceOrderRequestBody {
  Order application_json = 1;
}

message PlaceOrderParameters {
  PlaceOrderRequestBody request_body = 1;
}

message PlaceOrderOK {
  Order application_json = 1;

  Order application_xml = 2;
}

message PlaceOrderResponses {
  PlaceOrderOK ok = 1;
}

message GetOrderByIdParameters {
  int64 orderid = 1;
}

message GetOrderByIdOK {
  Order application_json = 1;

  Order application_xml = 2;
}

message GetOrderByIdResponses {
  GetOrderByIdOK ok = 1;
}

message DeleteOrderParameters {
  int64 orderid = 1;
}

message CreateUserRequestBody {
  User application_json = 1;
}

message CreateUserParameters {
  CreateUserRequestBody request_body = 1;
}

message CreateUsersWithArrayInputParameters {
  UserArray request_body = 1;
}

message CreateUsersWithListInputParameters {
  UserArray request_body = 1;
}

message LoginUserParameters {
  string username = 1;

  string password = 2;
}

message LoginUserOK {
  string application_json = 1;

  string application_xml = 2;
}

message LoginUserResponses {
  LoginUserOK ok = 1;
}

message GetUserByNameParameters {
  string username = 1;
}

message GetUserByNameOK {
  User application_json = 1;

  User application_xml = 2;
}

message GetUserByNameResponses {
  GetUserByNameOK ok = 1;
}

message UpdateUserRequestBody {
  User application_json = 1;
}

message UpdateUserParameters {
  string username = 1;

  UpdateUserRequestBody request_body = 2;
}

message DeleteUserParameters {
  string username = 1;
}

service Petstore {
  rpc UpdatePet ( UpdatePetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/pet" body:"request_body"  };
  }

  rpc AddPet ( AddPetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet" body:"request_body"  };
  }

  rpc FindPetsByStatus ( FindPetsByStatusParameters ) returns ( FindPetsByStatusResponses ) {
    option (google.api.http) = { get:"/pet/findByStatus"  };
  }

  rpc FindPetsByTags ( FindPetsByTagsParameters ) returns ( FindPetsByTagsResponses ) {
    option (google.api.http) = { get:"/pet/findByTags"  };
  }

  rpc GetPetById ( GetPetByIdParameters ) returns ( GetPetByIdResponses ) {
    option (google.api.http) = { get:"/pet/{petId}"  };
  }

  rpc UpdatePetWithForm ( UpdatePetWithFormParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/pet/{petId}" body:"request_body"  };
  }

  rpc DeletePet ( DeletePetParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/pet/{petId}"  };
  }

  rpc UploadFile ( UploadFileParameters ) returns ( UploadFileResponses ) {
    option (google.api.http) = { post:"/pet/{petId}/uploadImage" body:"request_body"  };
  }

  rpc GetInventory ( google.protobuf.Empty ) returns ( GetInventoryResponses ) {
    option (google.api.http) = { get:"/store/inventory"  };
  }

  rpc PlaceOrder ( PlaceOrderParameters ) returns ( PlaceOrderResponses ) {
    option (google.api.http) = { post:"/store/order" body:"request_body"  };
  }

  rpc GetOrderById ( GetOrderByIdParameters ) returns ( GetOrderByIdResponses ) {
    option (google.api.http) = { get:"/store/order/{orderId}"  };
  }

  rpc DeleteOrder ( DeleteOrderParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/store/order/{orderId}"  };
  }

  rpc CreateUser ( CreateUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user" body:"request_body"  };
  }

  rpc CreateUsersWithArrayInput ( CreateUsersWithArrayInputParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithArray" body:"request_body"  };
  }

  rpc CreateUsersWithListInput ( CreateUsersWithListInputParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { post:"/user/createWithList" body:"request_body"  };
  }

  rpc LoginUser ( LoginUserParameters ) returns ( LoginUserResponses ) {
    option (google.api.http) = { get:"/user/login"  };
  }

  rpc LogoutUser ( google.protobuf.Empty ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/user/logout"  };
  }

  rpc GetUserByName ( GetUserByNameParameters ) returns ( GetUserByNameResponses ) {
    option (google.api.http) = { get:"/user/{username}"  };
  }

  rpc UpdateUser ( UpdateUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { put:"/user/{username}" body:"request_body"  };
  }

  rpc DeleteUser ( DeleteUserParameters ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { delete:"/user/{username}"  };
  }
}

