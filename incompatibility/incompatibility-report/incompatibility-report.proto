
// Copyright 2017 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "../incompatibility-report;incompatibility";

package incompatibility;

// Base incompatibility structure in a file
message Incompatibility {
    repeated string token_path = 1; //unique path to incompatibility
    string classification = 2; // incomaptibility class.
}

// Report of base incompatibilities
message IncompatibilityReport {
    repeated Incompatibility incompatibilities = 1;
}

// Severity level for an incompatibility
enum Severity {
    INFO = 0;
    FAIL = 1;
}

// Detailed structure of an incompatibility in a file
message IncompatibilityDescription {
    // File position
    int32 line = 1;
    int32 column = 2;

    // string path to incompatibility
    repeated string token_path = 3;

    // hint to describe incompatibility
    repeated string hint = 4;

    Severity severity = 5;
}

// Report of incompatibility descriptions
message IDReport {
    repeated IncompatibilityDescription incompatibilities = 1;
}

// Aggregated information about an incompatibility in a set
message IncompatibilityAnalysis { 
    int32 files_with_incompatibility = 1;
}

// Aggregation of incompatibility scanning across a set
message APISetIncompatibility {
    int32 open_api_files = 1;
    int32 incompatible_files = 2;
    map<string, IncompatibilityAnalysis> analysis_per_incompatibility = 3;
}
